---
interface Props {
    name: string;
    logo: string;
    /** Lines separated by \n or <br> */
    offer: string;
    /** Score on a 0–5 or 0–10 scale */
    rating: string | number;
    votes?: number | string;
    link: string;
    accentTop?: boolean;
    rel?: string;
    target?: "_self" | "_blank";
    tickSrc?: string; // default tick icon
    starSrc?: string; // default star icon
}

const {
    name,
    logo,
    offer,
    rating,
    votes = 756,
    link,
    accentTop = false,
    rel,
    target,
    tickSrc = "/tick.svg",
    starSrc = "/star.png",
} = Astro.props as Props;

// normalize rating to /5 (accepts /10 too)
const raw = typeof rating === "string" ? parseFloat(rating) : rating;
const rating5 = Number.isFinite(raw) ? (raw > 5 ? (raw / 10) * 5 : raw) : 0;
const rating5Display = Math.max(0, Math.min(5, Math.round(rating5 * 10) / 10));
const starsFilled = Math.round(rating5Display);

// split offers
const offerLines = offer
    .split(/<br\s*\/?>|\n/g)
    .map((s) => s.trim())
    .filter(Boolean);

// link attrs
const isExternal = /^https?:\/\//i.test(link);
const relDefault = isExternal
    ? "noopener noreferrer sponsored nofollow"
    : undefined;
const relAttr = [rel, relDefault].filter(Boolean).join(" ") || undefined;
const targetAttr = target ?? (isExternal ? "_blank" : "_self");
---

<article
    class={"casino-card" + (accentTop ? " accent" : "")}
    itemscope
    itemtype="https://schema.org/Brand"
>
    <div class="grid">
        <!-- logo -->
        <div class="left">
            <div class="logo-wrap">
                <img
                    class="imgae"
                    src={logo}
                    alt={`${name} logo`}
                    loading="lazy"
                    decoding="async"
                />
            </div>
        </div>

        <!-- checks -->
        <div class="middle">
            <ul class="checks" itemprop="slogan">
                {
                    offerLines.map((line) => (
                        <li>
                            <img
                                class="tick"
                                src={tickSrc}
                                alt=""
                                aria-hidden="true"
                            />
                            <span class="info">{line}</span>
                        </li>
                    ))
                }
            </ul>
        </div>

        <!-- rating -->
        <div
            class="rating"
            aria-label={`Rating ${rating5Display.toFixed(1)} out of 5`}
        >
            <div class="badge">
                <div class="badge-top">
                    <div
                        class="score"
                        itemprop="aggregateRating"
                        itemscope
                        itemtype="https://schema.org/AggregateRating"
                    >
                        <span class="num" itemprop="ratingValue"
                            >{rating5Display.toFixed(1)}</span
                        >
                        <meta itemprop="bestRating" content="5" />
                        <meta itemprop="worstRating" content="0" />
                    </div>
                    <div class="stars" aria-hidden="true">
                        {
                            Array.from({ length: 5 }).map((_, i) => (
                                <img
                                    class={
                                        "star" +
                                        (i < starsFilled ? " filled" : "")
                                    }
                                    src={starSrc}
                                    alt=""
                                />
                            ))
                        }
                    </div>
                </div>
                <div class="badge-foot">Votes: {votes}</div>
            </div>
        </div>

        <!-- ctas -->
        <div class="cta">
            <a
                href={link}
                class="greebtn btn btn-primary"
                rel={relAttr}
                target={targetAttr}
                aria-label={`Ganhe bônus at ${name}`}
            >
                Ganhe bônus
            </a>
            <a
                href={link}
                class="visit"
                rel={relAttr}
                target={targetAttr}
                aria-label={`Visit ${name} site`}
            >
                Visite o site
            </a>
        </div>
    </div>
</article>

<style>
    :root {
        --green: #118a3c;
        --green-strong: #0ea34a;
        --ink: #1e2937;
        --muted: #374151;
        --line: #e6e9ef;
    }

    /* card shell */
    .casino-card {
        /* Figma: color #000 at 20% + background blur 40 */
        background: rgba(0, 0, 0, 0.2);
        -webkit-backdrop-filter: blur(40px);
        backdrop-filter: blur(40px);

        /* Figma: border 1px #6C6C6C, rounded corners */
        border: 1px solid #6C6C6C;
        border-radius: 20px;

        /* Keep your existing layout bits */
        color: #fff; /* ensure legibility on dark glass */
        overflow: hidden;
        margin-bottom: 18px;

        /* Optional: subtle depth (remove if you don’t want it) */
        box-shadow: 0 10px 32px rgba(0, 0, 0, 0.14);
    }

    /* Remove bullets anywhere inside the card (robust) */
    .casino-card ul,
    .casino-card li {
        list-style: none;
    }
    .casino-card ul {
        margin: 0;
        padding: 0;
        padding-left: 1rem;
    }
    .casino-card li::marker {
        content: "";
    }

    /* layout (desktop) */
    .grid {
        display: grid;
        grid-template-columns:
            minmax(160px, 260px) 1fr minmax(210px, 240px)
            minmax(170px, 210px);
        grid-template-areas: "left middle rating cta";
        align-items: stretch;
        column-gap: 0;
    }
    .left {
        grid-area: left;
    }
    .middle {
        grid-area: middle;
    }
    .rating {
        grid-area: rating;
    }
    .cta {
        grid-area: cta;
    }

    /* left */
    .left {
        position: relative;
        padding: 18px 18px;
        background: rgba(0, 0, 0, 0.5);
        /* border-right: 1px solid var(--line); */
    }
    .logo-wrap {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 88px;
    }
    .logo-wrap img {
       height: 120px;
    width: 179px;
        object-fit: contain;
        display: block;
    }

    /* middle */
    .middle {
        position: relative;
        /* padding: 18px 20px; */
        display: flex;
        align-items: center;
    }
    .checks {
        display: grid;
        font-size: 16px;
        color: var(--ink);
    }
    .checks li {
        display: flex;
        gap: 10px;
        align-items: flex-start;
    }
    .tick {
        width: 18px;
        height: 18px;
        margin-top: 2px;
    }
    .info {
        font-weight: 600;
        color: white;
    }

    /* chevrons (desktop only) */
    .middle::before,
    .middle::after {
        content: "";
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        width: 1rem;
        height: 2rem;
        background:
            linear-gradient(221deg, transparent 50%, rgba(0, 0, 0, 0.5) 0) top,
            linear-gradient(-45deg, transparent 50%, rgba(0, 0, 0, 0.5) 0)
                bottom;
        background-size: 100% 50%;
        background-repeat: no-repeat;
        margin: -0.4px;
    }
    .middle::before {
        left: -7px;
        display: none;
    }

    /* rating badge */
    .rating {
        padding: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .badge {
        width: min(189px, 100%);
        border: 1.5px solid #6C6C6C;
        border-radius: 16px;
        overflow: hidden;
        background: rgba(0, 0, 0, 0.2);
        border: 1px solid 6C6C6C;
    }
    .badge-top {
        padding: 12px 14px 8px;
        text-align: center;
        border-bottom: 1px solid #6C6C6C;
        border-radius: 20px; /* ← rounded card corners */
        overflow: hidden;
    }
    .num {
        font-size: 34px;
        font-weight: 800;
        color: var(--green-strong);
        line-height: 1;
    color: #c5c5c5;    }
    .stars {
        margin-top: 8px;
        display: flex;
        justify-content: center;
        gap: 6px;
    }
    .star {
        width: 20px;
        height: 20px;
        opacity: 0.28;
        object-fit: contain;
    }
    .star.filled {
        opacity: 1;
    }
    .badge-foot {
        background: rgba(0, 0, 0, 0.2);
        color: #e8edf3;
        text-align: center;
        padding: 8px 10px;
        font-size: 13px;
    }

    /* ctas */
    .cta {
        padding: 18px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 12px;
    }
    .btn {
        display: block;
        width: 100%;
        padding: 12px 16px;
        text-align: center;
        border-radius: 12px;
        font-weight: 700;
        font-size: 15px;
        color: #1A1612;
        text-decoration: none;
        letter-spacing: 0.02em;
        width: 6rem;
    }
    .btn-primary {
        background: #feb104;
        box-shadow: 0 8px 16px rgba(167, 157, 21, 0.28);
        border: 1px solid rgba(0, 0, 0, 0.18);
        width: 200px;
        height: 58px;
        font-size: 22px;
        font-weight: 700;
    }
    .btn-primary:hover {
        filter: brightness(1.07);
    }
    .visit {
        color: white;
        font-weight: 500;
        text-decoration: underline;
        text-underline-offset: 3px;
    }
    .visit:hover,
    .visit:focus-visible {
        color: #111;
    }

    /* ------------ TABLET <= 990px ------------ */
    /* 1) Name the grid areas once (desktop or global) */
    .grid {
        display: grid;
    }
    .left {
        grid-area: left;
    }
    .middle {
        grid-area: middle;
    }
    .rating {
        grid-area: rating;
    }
    .cta {
        grid-area: cta;
    }

    /* 2) At ≤ 990px use two columns with explicit widths */
    @media (max-width: 990px) {
        .grid {
            /* gray strip on the left, content on the right */
            grid-template-columns: minmax(220px, 32%) 1fr;
            grid-template-areas:
                "left   middle"
                "rating middle"
                "rating cta"; /* CTA sits under the middle column */
            column-gap: 0;
            /* row-gap: 10px; */
            padding: 0;
        }

        /* LEFT (gray) */
        .left {
            background: rgba(0, 0, 0, 0.5);
            /* border-right: 1px solid var(--line); */
            padding: 10px;
        }
        .logo-wrap {
            justify-content: flex-start;
        }
        .logo-wrap img {
            height: 11rem;
            width: 16rem;
            max-width: 100%;
            padding: 1rem;
        }

        /* MIDDLE (white) */
        .middle {
            background: rgba(0, 0, 0, 0);
            padding: 8px 16px;
        }
        .middle::before,
        .middle::after {
            margin: -16px;
            top: 75%;
        }

        /* RATING (gray, under left) */
        .rating {
            background: rgba(0, 0, 0, 0.5);
            /* border-right: 1px solid var(--line); */
            padding: 10px;
            justify-content: center;
        }
        .rating .badge {
            /* width: 100%; */
            max-width: 280px;
            margin: 0;
        }

        /* CTA (white, under middle) */
        .cta {
            grid-area: cta;
            background: rgba(0, 0, 0, 0);
            justify-self: center; /* center the grid item */
            align-self: start;
            align-items: center; /* center buttons inside */
            justify-content: center;
            width: auto;
            margin: 0 auto;
            padding: 0 16px 12px;
        }

        .btn {
            width: clamp(260px, 60vw, 409px);
        } /* roomy but not overflowing */

        .info {
            font-weight: 600;
            font-size: 28px;
            line-height: initial;
        }
        .visit {
            font-size: 24px;
        }

        .checks li {
            margin-top: 11px;
        }
    }

    /* 2) At ≤ 780px use two columns with explicit widths */
    /* 2) At ≤ 780px use two columns with explicit widths (match screenshot) */
    @media (max-width: 780px) {
        .grid {
            grid-template-columns: minmax(32%, 34%) 1fr; /* gray strip + content */
            grid-template-areas:
                "left   middle"
                "rating middle"
                "rating cta"; /* rating under left, CTA under middle */
            column-gap: 0;
            row-gap: 0;
            padding: 0;
        }

        /* LEFT STRIP (logo area) */
        .left {
            grid-area: left;
            background: rgba(0, 0, 0, 0.5);
            padding: 10px 10px 0;
            /* border-right: 1px solid var(--line); */
        }
        .logo-wrap {
            justify-content: flex-start;
        }
        .logo-wrap img {
            max-width: 100%;
            height: 6rem;
            padding: 8px;
        }

        /* CHECKLIST (white panel) + notch between columns */
        .middle {
            grid-area: middle;
            position: relative;
            padding: 8px 14px 0 18px;
            background: rgba(0, 0, 0, 0);
        }
        /* notch (white chevron) */
        /* chevrons (desktop only) */
        .middle::before,
        .middle::after {
            content: "";
            position: absolute;
            top: 100%;
            transform: translateY(-50%);
            width: 1rem;
            height: 2rem;
            background:
                linear-gradient(221deg, transparent 50%, rgba(0, 0, 0, 0.5) 0)
                    top,
                linear-gradient(-45deg, transparent 50%, rgba(0, 0, 0, 0.5) 0)
                    bottom;
            background-size: 100% 50%;
            background-repeat: no-repeat;
            margin: -18.4px;
        }
        .middle::before {
            left: -7px;
            display: none;
        }
        .middle::after {
            bottom: 48px;
        } /* lower notch near button */
        .checks {
            row-gap: 8px;
        }

        .checks li {
            margin-top: 1px;
        }
        .tick {
            width: 16px;
            height: 16px;
            margin-top: 2px;
        }
        .info {
            font-weight: 700;
            font-size: 13px;
            line-height: 1.35;
        }

        /* RATING (on gray strip under logo) */
        .rating {
            grid-area: rating;
            background: rgba(0, 0, 0, 0.5);
            /* border-right: 1px solid var(--line); */
            padding: 8px 10px 12px;
            display: flex;
            align-items: flex-start;
            justify-content: center;
            /* margin-top: 1rem; */
        }
        .rating .badge {
            width: 128px; /* compact tile like image */
            max-width: 100%;
            margin: 0 0 0 6px;
            box-shadow: 0 2px 0 rgba(0, 0, 0, 0.25); /* small drop like image */
            border-radius: 12px;
        }
        .num {
            font-size: 22px;
        }
        .stars {
            gap: 4px;
            margin-top: 6px;
        }
        .star {
            width: 12px;
            height: 12px;
        }
        .badge-foot {
            font-size: 11px;
            padding: 6px 8px;
        }

        /* CTA (big green button under checklist) */
        .cta {
            grid-area: cta;
            background: rgba(0, 0, 0, 0);
            justify-self: start;
            align-self: start;
            align-items: center;
            justify-content: center;
            padding: 0 14px 12px 18px;
        }
        .btn {
            margin-top: 1rem;
            width: 14rem;
            border-radius: 12px;
            box-shadow: 0 6px 12px rgba(17, 138, 60, 0.28);
        }
        .visit {
            display: block;
            width: 100%;
            max-width: 290px;
            text-align: center;
            /* margin: 8px 0 0; */
        }

        /* tidy */
        .left,
        .middle {
            border-right: none;
        }
    }
</style>
